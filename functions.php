<?php
/**
 * Functions File
 *
 * Description
 *
 * @package    formula
 * @version    3.0
 * @author     Fitness Web Formula
 * @link       https://fitnesswebsiteformula.com
 * @license
 */

@ini_set( 'upload_max_size' , '64M' );
@ini_set( 'post_max_size', '64M');
@ini_set( 'max_execution_time', '300' );

/** Load the core theme framework. */
require_once( trailingslashit( get_template_directory() ) . 'library/hybrid.php' );

new Hybrid();

/** Theme setup */
function pdw_spine_theme_setup() {

	/** Custom thumbnail size */
	add_image_size('featured', 1000, 640, true);

	add_image_size('fwf_latest_blog', 265, 150, true);

	/** Theme constants */
	define ( 'PDW_SPINE_JS_URL', trailingslashit( get_template_directory_uri() . '/js' ) );

	define ( 'PDW_SPINE_CSS_URL', trailingslashit( get_template_directory_uri() . '/css' ) );

	define ( 'PDW_SPINE_INC_DIR', trailingslashit( get_template_directory() . '/includes' ) );

	define ( 'PDW_SPINE_DIR', dirname( __FILE__ ) );

	define( 'PDW_SPINE_VERSION', '1.3.2' );

	/** Template tags */
	include_once PDW_SPINE_INC_DIR . 'template-tags.php';

	/** Use Foundation nav bar markup for menus */
	include_once PDW_SPINE_INC_DIR . 'navbar-walker.php';

	/** Use Foundation makrup for galleries */
	include_once PDW_SPINE_INC_DIR . 'gallery-shortcode.php';

	/** Load main stylesheet */
	add_action( 'wp_enqueue_scripts', 'pdw_spine_load_styles', 99 );

	/** Load the javascripts */
	add_action( 'wp_enqueue_scripts', 'pdw_spine_load_scripts' );

	/** Remove unwanted data that slow down our sites */
	remove_action( 'wp_head', array('wlb_branding', 'wlb_branding') );
	remove_action( 'wp_head', 'print_emoji_detection_script', 7 );
	remove_action( 'wp_print_styles', 'print_emoji_styles' );

	/** Hybrid Core features */
	/** Get action/filter hook prefix. */
	$prefix = hybrid_get_prefix();

	/** Add theme support for core framework features. */
	add_theme_support( 'hybrid-core-menus', array( 'primary', 'footer', 'bottom', 'members' ) );
	add_theme_support( 'hybrid-core-sidebars', array( 'primary' ) );
	add_theme_support( 'hybrid-core-widgets' );
	add_theme_support( 'hybrid-core-shortcodes' );
	add_theme_support( 'woocommerce' );

	/** Add theme settings */
	add_theme_support( 'hybrid-core-theme-settings', array( 'about', 'leadpages', 'misc', 'ultimate-offer', 'footer' ) );

	/** Include theme customizer options */
	include_once 'includes/theme-customizer.php';
	add_action( 'customize_register', 'pdw_spine_customize_register' );

	add_theme_support( 'hybrid-core-template-hierarchy' );

	/** Add theme support for framework extensions. */
	//add_theme_support( 'post-stylesheets' );
	add_theme_support( 'dev-stylesheet' );
	//add_theme_support( 'loop-pagination' );
	add_theme_support( 'get-the-image' );
	add_theme_support( 'breadcrumb-trail' );
	add_theme_support( 'cleaner-gallery' );

	/** Add theme support for WordPress features. */
	add_theme_support( 'automatic-feed-links' );
	//add_theme_support( 'post-formats', array( 'image', 'gallery' ) );

	add_theme_support( 'theme-layouts', array( '2c-l', '2c-r' ) );

	/* Add theme support for some included libraries. */
	add_theme_support( 'color-palette', array( 'callback' => 'pdw_spine_register_colors' ) );
	add_theme_support( 'theme-fonts',   array( 'callback' => 'pdw_spine_register_fonts', 'customizer' => true ) );

	/** Add support for WordPress custom header image. */
	/*add_theme_support(
		'custom-header',
		array(
			'wp-head-callback'    => '__return_false',
			'admin-head-callback' => '__return_false',
			'header-text'         => false,
			'default-image'       => 'remove-header',
			'width'               => 572,
			'height'              => 164
		)
	);*/

	add_theme_support( 'featured-header' );

	if( function_exists('hybrid_get_setting') && hybrid_get_setting( 'extension_membership' ) ) {
		add_theme_support( 'fwf-membership' );
	}

	/** Set content width. */
	hybrid_set_content_width( 637 );

	add_filter( 'wp_nav_menu_objects', 'pdw_spine_add_active_class' );

	add_filter( 'loop_pagination_args', 'pdw_spine_foundation_pagination' );

	/* Register Spine widgets. */
	add_action( 'widgets_init', 'pdw_spine_register_widgets' );

	/* Remove open graph images generated by yoast SEO */
	add_filter( 'wpseo_pre_analysis_post_content', 'pdw_spine_opengraph_content');

	function pdw_spine_opengraph_content($val) { return preg_replace("/<img[^>]+>/i", "", $val); }

	/**  custom editor styles */
	if ( is_admin() ) {
		include( 'tinymce-kit/tinymce-kit.php' );

		/** Load the admin javascripts && CSS */
		add_action( 'admin_enqueue_scripts', 'pdw_spine_load_admin_scripts' );
		add_action( 'admin_head', 'pdw_spine_admin_head' );

		/* Callback for allowing image uploads for post type 'fb_location'  */
		add_action ( 'post_edit_form_tag', 'fb_post_edit_form_tag' );

		function fb_post_edit_form_tag () {
			global $post;
			if ( !$post ) return;

			$post_type = get_post_type ( $post->ID );
			if ( $post_type != 'fb_location' ) return;

			printf ( ' enctype="multipart/form-data" encoding="multipart/form-data" ' );
		}

	} // end if

	//add_filter('post_thumbnail_html', 'pdw_spine_add_thumbnail_class',10, 3 );
	add_filter( 'get_the_image', 'pdw_spine_add_featured_img_class', 10, 1 );

	/** Register widget areas */
	add_action('widgets_init', 'pdw_spine_register_sidebars', 11);

	add_filter("{$prefix}_sidebar_defaults", 'spine_sidebar_defaults');

	add_editor_style();

	/** Jetpack feature */
	add_theme_support( 'infinite-scroll', array(
		'container'  => 'hfeed',
		'footer'     => 'page',
	) );

	/* Disable primary sidebar widgets when layout is one column. */
	add_filter( 'sidebars_widgets', 'pdw_spine_disable_sidebars' );
	add_action( 'template_redirect', 'pdw_spine_one_column' );

	/** Register Custom Content Types */
	if( 'slideshow' == get_theme_mod( 'theme_home_opening' ) ) {
		$custom_types = array( //[0] system [1] Singular [2] Prural [3] slug [4] capability_type [5] show_in_nav_menus [6] supports
			/*array('fb_location', 'Location', 'Locations', 'locations', 'page', TRUE, array( 'title', 'editor', 'thumbnail')),*/
			array('cp_slide', 'Slide', 'Slides', 'slide', 'post', FALSE, array( 'title', 'editor', 'thumbnail'))
		);

		foreach($custom_types as $type) {
			$labels = array(
			'name' => __($type[2]),
			'singular_name' => __($type[1]),
			'add_new_item' => __('Add New '. $type[1]),
			'edit_item' => __('Edit '. $type[1]),
			'new_item' => __('New '. $type[1]),
			'all_items' => __('All '. $type[2]),
			'view_item' => __('View '. $type[1]),
			'search_items' => __('Search '. $type[2]),
			'not_found' =>  __('No '. $type[3] .' found'),
			'not_found_in_trash' => __('No '. $type[3] .' found in Trash')
			);

			$args = array(
			'labels' => $labels,
			'public' => true,
			'show_in_nav_menus' => $type[5],
			'show_in_menu' => TRUE,
			'capability_type' => $type[4],
			'rewrite' => array( 'slug' => $type[3], 'with_front' => FALSE ),
			'menu_position' => 20,
			'supports' => $type[6]
			);

			register_post_type($type[0], $args); //Create new content types
		}
	}
}

/* Do theme setup on the 'after_setup_theme' hook. */
add_action( 'after_setup_theme', 'pdw_spine_theme_setup' );

/* Load additional libraries a little later. */
add_action( 'after_setup_theme', 'pdw_spine_load_libraries', 15 );

/* Activate URL rewrites for custom content types on theme activation */
add_action( 'after_switch_theme', 'pdw_spine_rewrite_flush' );
function pdw_spine_rewrite_flush() {
    flush_rewrite_rules();
}

/* Custom Content Type Actions */
add_action( 'admin_init', 'pdw_spine_add_custom_metabox' );
add_action( 'save_post', 'pdw_spine_save_custom_postmeta' );

/**
 * Add meta box
 */
function pdw_spine_add_custom_metabox() {
	add_meta_box( 'custom-basic-info-metabox', __(  'Location Details' ), 'pdw_spine_basic_info_custom_metabox', 'fb_location', 'normal', 'high' );
	add_meta_box( 'custom-schedule-metabox', __(  'Schedule' ), 'pdw_spine_schedule_custom_metabox', 'fb_location', 'normal', 'default' );
	add_meta_box( 'custom-opening-metabox', __(  'Opening Content (FWF)' ), 'pdw_spine_opening_custom_metabox', 'page', 'normal', 'high' );
}

/**
 * Display the metaboxes
 */
function pdw_spine_basic_info_custom_metabox() {
	global $post;
	$fb_location_main_image = 	get_post_meta( $post->ID, 'fb_location_main_image', true );
	$fb_location_image2 = 		get_post_meta( $post->ID, 'fb_location_image2', true );
	$fb_location_subtitle = 	get_post_meta( $post->ID, 'fb_location_subtitle', true );
	$fb_location_street = 		get_post_meta( $post->ID, 'fb_location_street', true );
	$fb_location_city = 		get_post_meta( $post->ID, 'fb_location_city', true );
	$fb_location_state = 		get_post_meta( $post->ID, 'fb_location_state', true );
	$fb_location_country = 		get_post_meta( $post->ID, 'fb_location_country', true );
	$fb_postal_code = 			get_post_meta( $post->ID, 'fb_postal_code', true );
	$fb_location_phone = 		get_post_meta( $post->ID, 'fb_location_phone', true );

	$fb_location_website = 		pdw_http_url( get_post_meta( $post->ID, 'fb_location_website', true ) );
	$fb_location_signup = 		pdw_http_url( get_post_meta( $post->ID, 'fb_location_signup', true ) );
	$fb_location_facebook = 	pdw_http_url( get_post_meta( $post->ID, 'fb_location_facebook', true ) );
	$fb_location_yelp = 		pdw_http_url( get_post_meta( $post->ID, 'fb_location_yelp', true ) );

	$fb_location_amenities =	get_post_meta( $post->ID, 'fb_location_amenities', true );
	?>
	<h4><?php _e( 'Pictures & Address', 'fitnessthemes' ); ?></h4>
	<table class="form-table"><tbody>
	<tr valign="top"><th scope="row"><?php _e( 'Upload Primary Pictue', 'fitnessthemes' ); ?><br /><small><?php _e( 'E.g. Exterior of the building', 'fitnessthemes' ); ?></small></th>
		<td><input type="file" id="fb_location_main_image" size="100" name="fb_location_main_image" /><br /><small><?php _e( '(Larger than 600px recommended)', 'fitnessthemes' ); ?></small>
		<?php if( $fb_location_main_image ): ?><br /><img src="<?php echo $fb_location_main_image; ?>" alt="Primary location image" style="max-width:40%" /><?php endif; ?>
		</td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Upload Secondary Pictue', 'fitnessthemes' ); ?><br /><small><?php _e( 'E.g. Interior', 'fitnessthemes' ); ?></small></th>
		<td><input type="file" id="fb_location_image2" size="100" name="fb_location_image2" /><br /><small><?php _e( '(Larger than 600px recommended)', 'fitnessthemes' ); ?></small>
		<?php if( $fb_location_image2 ): ?><br /><img src="<?php echo $fb_location_image2; ?>" alt="Secondary location image" style="max-width:40%" /><?php endif; ?>
		</td></tr>

	<tr valign="top"><th scope="row"><?php _e( 'Location Sub-title', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_subtitle" size="70" name="fb_location_subtitle" value="<?php if( $fb_location_subtitle ) { echo $fb_location_subtitle; } ?>" /><br /><small><?php _e( '(Example: By airport)', 'fitnessthemes' ); ?></small></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Street Address', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_street" size="70" name="fb_location_street" value="<?php if( $fb_location_street ) { echo $fb_location_street; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'City', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_city" size="35" name="fb_location_city" value="<?php if( $fb_location_city ) { echo $fb_location_city; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'State/Region', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_state" size="35" name="fb_location_state" value="<?php if( $fb_location_state ) { echo $fb_location_state; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Country', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_country" size="25" name="fb_location_country" value="<?php if( $fb_location_country ) { echo $fb_location_country; } ?>" /><br /><small><?php _e( '(Helps Google Map locate your address)', 'fitnessthemes' ); ?></small></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'ZIP/Postal Code', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_postal_code" size="10" name="fb_postal_code" value="<?php if( $fb_postal_code ) { echo $fb_postal_code; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Phone', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_phone" size="25" name="fb_location_phone" value="<?php if( $fb_location_phone ) { echo $fb_location_phone; } ?>" /></td></tr>
	</table>
	<h4><?php _e( 'URLs', 'fitnessthemes' ); ?></h4>
	<table class="form-table"><tbody>
	<tr valign="top"><th scope="row"><?php _e( 'Website', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_website" size="70" name="fb_location_website" value="<?php if( $fb_location_website ) { echo $fb_location_website; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Sign Up', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_signup" size="70" name="fb_location_signup" value="<?php if( $fb_location_signup ) { echo $fb_location_signup; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Facebook', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_facebook" size="70" name="fb_location_facebook" value="<?php if( $fb_location_facebook ) { echo $fb_location_facebook; } ?>" /></td></tr>
	<tr valign="top"><th scope="row"><?php _e( 'Yelp', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_yelp" size="70" name="fb_location_yelp" value="<?php if( $fb_location_yelp ) { echo $fb_location_yelp; } ?>" /></td></tr>
	</table>

	<h4><?php _e( 'Other Info', 'fitnessthemes' ); ?></h4>
	<table class="form-table"><tbody>
	<tr valign="top"><th scope="row"><?php _e( 'List of Amenities', 'fitnessthemes' ); ?></th>
		<td><input type="text" id="fb_location_amenities" size="70" name="fb_location_amenities" value="<?php if( $fb_location_amenities ) { echo $fb_location_amenities; } ?>" /><br /><small><?php _e( '(Shower, changing room, kids room, etc)', 'fitnessthemes' ); ?></small></td></tr>
	<tr valign="top">
		<td colspan="2">
			<?php _e( 'Custom Content', 'fitnessthemes' ); ?>
			<?php wp_editor(
			get_post_meta( $post->ID, 'fb_location_custom_content', true ),	// Editor content.
			'fb_location_custom_content',		// Editor ID.
			array(
				'textarea_name' => 'fb_location_custom_content',
				'textarea_rows' => 4
			)
		); ?>
		<small><?php _e( 'Shortcode supported', 'fitnessthemes' ); ?></small>
		</td></tr>
	</table>
<?php
}
function pdw_spine_schedule_custom_metabox() {
	global $post;
	?>
	<table class="form-table"><tbody>
	<tr valign="top">
		<td>
			<?php _e( 'Schedule', 'fitnessthemes' ); ?>
			<?php wp_editor(
			get_post_meta( $post->ID, 'fb_location_schedule', true ),	// Editor content.
			'fb_location_schedule',		// Editor ID.
			array(
				'textarea_name' => 'fb_location_schedule',
				'textarea_rows' => 5
			)
		); ?>
		</td></tr>
	</table>

	<!--style type="text/css">.fb_location_schedule{width:100%;} .fb_location_schedule th {background:#cdcdcd;padding:2px;}.fb_location_schedule td{padding:2px;}</style>
	<h4><?php _e( 'Click cells to edit', 'fitnessthemes' ); ?></h4>
	<table class="fb_location_schedule" cellpadding="0" cellspacing="0">
		<tr>
			<th><?php _e( 'Mon', 'fitnessthemes' ); ?></th>
			<th><?php _e( 'Tue', 'fitnessthemes' ); ?></th>
			<th><?php _e( 'Wed', 'fitnessthemes' ); ?></th>
			<th><?php _e( 'Thu', 'fitnessthemes' ); ?></th>
			<th><?php _e( 'Fri', 'fitnessthemes' ); ?></th>
			<th><?php _e( 'Sat', 'fitnessthemes' ); ?></th>
			<th><?php _e( 'Sun', 'fitnessthemes' ); ?></th>
		</tr>
		<tr>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
			<td></td>
		</tr>
	</table-->

<?php
}

function pdw_spine_opening_custom_metabox() {
	global $post;
	$fwf_page_title_bg = get_post_meta( $post->ID, 'fwf_page_title_bg', true );
	?>
	<table class="form-table"><tbody>
	<tr valign="top">
		<td>
			<?php _e( 'Opening Content', 'fitnessthemes' ); ?>
			<?php wp_editor(
			get_post_meta( $post->ID, 'sport_opening_content', true ),	// Editor content.
			'sport_opening_content',		// Editor ID.
			array(
				'textarea_name' => 'sport_opening_content',
				'textarea_rows' => 5
			)
		); ?>
		</td>
	</tr>
	<tr valign="top">
		<td><?php _e( 'Page Title Background', 'fitnessthemes' ); ?><br />
		<input type="file" id="fwf_page_title_bg" size="100" name="fwf_page_title_bg" /><br /><small><?php _e( '(Larger than 600px recommended)', 'fitnessthemes' ); ?></small>
		<?php if( $fwf_page_title_bg ): ?><br /><img src="<?php echo $fwf_page_title_bg; ?>" alt="Primary location image" style="max-width:40%" /><?php endif; ?>
		</td>
	</tr>
	</table>
<?php
}

function pdw_http_url($url) {
	return ( !preg_match( "/http(s?):\/\//", $url ) ) ? $fb_location_url = 'http://' : $url;
}

/**
 * Process the custom metabox fields for Location content type
 */
function pdw_spine_save_custom_postmeta ( $post_id ) {
	global $post;

	if( $post->post_type == 'page' ) {
		update_post_meta( $post_id, 'sport_opening_content', $_POST['sport_opening_content'] );
		if( !empty( $_FILES['fwf_page_title_bg']['name'] ) ) { // New image upload
			pdw_spine_insert_attachment( $post_id, 'fwf_page_title_bg' );
		}
	}

	if(in_array($post->post_type, array('fb_location')) && $_POST ) {
		update_post_meta( $post_id, 'fb_location_subtitle', $_POST['fb_location_subtitle'] );
		update_post_meta( $post_id, 'fb_location_street', $_POST['fb_location_street'] );
		update_post_meta( $post_id, 'fb_location_city', $_POST['fb_location_city'] );
		update_post_meta( $post_id, 'fb_location_state', $_POST['fb_location_state'] );
		update_post_meta( $post_id, 'fb_location_country', $_POST['fb_location_country'] );
		update_post_meta( $post_id, 'fb_postal_code', $_POST['fb_postal_code'] );
		update_post_meta( $post_id, 'fb_location_phone', $_POST['fb_location_phone'] );
		update_post_meta( $post_id, 'fb_location_amenities', $_POST['fb_location_amenities'] );
		update_post_meta( $post_id, 'fb_location_website', $_POST['fb_location_website'] );
		update_post_meta( $post_id, 'fb_location_signup', $_POST['fb_location_signup'] );
		update_post_meta( $post_id, 'fb_location_facebook', $_POST['fb_location_facebook'] );
		update_post_meta( $post_id, 'fb_location_yelp', $_POST['fb_location_yelp'] );
		update_post_meta( $post_id, 'fb_location_schedule', $_POST['fb_location_schedule'] );
		update_post_meta( $post_id, 'fb_location_custom_content', $_POST['fb_location_custom_content'] );

		if( !empty( $_FILES['fb_location_main_image']['name'] ) ) { // New image upload
			pdw_spine_insert_attachment( $post_id, 'fb_location_main_image' );
		}

		if( !empty( $_FILES['fb_location_image2']['name'] ) ) {
			pdw_spine_insert_attachment( $post_id, 'fb_location_image2' );
		}
	}
}

function pdw_spine_insert_attachment( $post_id, $field ) {
	require_once( ABSPATH . 'wp-admin/includes/file.php' );
	$override['action'] = 'editpost';

	$uploaded_file = wp_handle_upload($_FILES[$field], $override);

	$attachment = array(
	'post_title' => $_FILES[$field]['name'],
	'post_content' => '',
	'post_type' => 'attachment',
	'post_parent' => $post_id,
	'post_mime_type' => $_FILES[$field]['type'],
	'guid' => $uploaded_file['url']
	);

	// Save the data
	$id = wp_insert_attachment( $attachment,$_FILES[$field][ 'file' ], $post_id );
	wp_update_attachment_metadata( $id, wp_generate_attachment_metadata( $id, $_FILES[$field]['file'] ) );

	update_post_meta($post_id, $field, $uploaded_file['url']);
}


/**
 * Get and return the values for the URL
 */
function pdw_spine_get_url_box($pid = 0) {
	global $post;
	if($pid) {
		return get_post_meta( $pid, 'fb_location_url', true );
	} else {
		return get_post_meta( $post->ID, 'fb_location_url', true );
	}
}

/**
 * Loads some additional PHP scripts into the theme for usage.
 */
function pdw_spine_load_libraries() {
	require_once( trailingslashit( get_template_directory() ) . 'includes/color-palette.php' );
	require_once( trailingslashit( get_template_directory() ) . 'includes/theme-fonts.php' );
}

/**
 * Registers Spine extra widget areas
 */
function pdw_spine_register_sidebars(){
	register_sidebar(
		array(
			'id' => 'top_bar',
			'name' => __( 'Top Bar', 'fitnessthemes' ),
			'description' => __( 'Content inside a top bar above the header','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="fwf-top-bar row widget%2$s"><div class="columns twelve">',
			'after_widget' => '</div></div>',
			'before_title' => '',
			'after_title' => ''
		)
	);
	register_sidebar(
		array(
			'id' => 'after_blog_post',
			'name' => __( 'After Blog Post', 'fitnessthemes' ),
			'description' => __( 'Content below a single blog post','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="after-blog-post row widget%2$s"><div class="columns twelve">',
			'after_widget' => '</div></div>',
			'before_title' => '',
			'after_title' => ''
		)
	);
	register_sidebar(
		array(
			'id' => 'home_top',
			'name' => __( 'Home Top Area', 'fitnessthemes' ),
			'description' => __( 'Optional widgetized area above the content','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="home_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title">',
			'after_title' => '</h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'home_bottom',
			'name' => __( 'Home Bottom Area', 'fitnessthemes' ),
			'description' => __( 'Area below the content','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="home_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title">',
			'after_title' => '</h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'shop-primary',
			'name' => __( 'Shop Sidebar', 'fitnessthemes' ),
			'description' => __( 'WooCommerce Primary Sidebar','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="shop_sidebar_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title">',
			'after_title' => '</h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'lessons-sidebar',
			'name' => __( 'Lessons Sidebar Area', 'fitnessthemes' ),
			'description' => __( 'Left side menu for lessons pages','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="lessons_sidebar_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title">',
			'after_title' => '</h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'footer_left',
			'name' => __( 'Footer Area #1', 'fitnessthemes' ),
			'description' => __( 'Left widget area in the footer','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="footer_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title"><span>',
			'after_title' => '</span></h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'footer_middle',
			'name' => __( 'Footer Area #2', 'fitnessthemes' ),
			'description' => __( 'Middle widget area in the footer','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="footer_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title"><span>',
			'after_title' => '</span></h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'footer_right',
			'name' => __( 'Footer Area #3', 'fitnessthemes' ),
			'description' => __( 'Right widget area in the footer','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="footer_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title"><span>',
			'after_title' => '</span></h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'footer_bottom',
			'name' => __( 'Footer Bottom Area', 'fitnessthemes' ),
			'description' => __( 'Bottom area under the footer widgets','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="footer_bottom_widget widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title">',
			'after_title' => '</h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'footer_articles',
			'name' => __( 'Footer Area (SEO)', 'fitnessthemes' ),
			'description' => __( 'Article area in the footer','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="footer_widget_articles widget%2$s">',
			'after_widget' => '</div>',
			'before_title' => '<h5 class="widget-title">',
			'after_title' => '</h5>'
		)
	);
	register_sidebar(
		array(
			'id' => 'menu_content',
			'name' => __( 'Menu Content', 'fitnessthemes' ),
			'description' => __( 'Append content to the end of primary menu','fitnessthemes' ),
			'before_widget' => '<div id="%1$s" class="menu_content">',
			'after_widget' => '</div>',
			'before_title' => '<!--',
			'after_title' => '-->'
		)
	);

}

function spine_sidebar_defaults($defaults){

	/* Set up some default sidebar arguments. */
	$spine = array(
		'before_widget' => '<article id="%1$s" class="panel widget %2$s widget-%2$s"><div class="widget-wrap widget-inside">',
		'after_widget'  => '</div></article>',
		'before_title'  => '<h4 class="widget-title">',
		'after_title'   => '</h4>'
	);

	array_merge( $defaults, $spine );
	return $spine;
}

/**
 * Load the necessary CSS files
 */
function pdw_spine_load_styles() {

	/* translators: If there are characters in your language that are not supported
	   by Open Sans, translate this to 'off'. Do not translate into your own language. */
	if ( 'off' !== _x( 'on', 'Open Sans font: on or off', 'spine' ) ) {
		$subsets = 'latin,latin-ext';

		/* translators: To add an additional Open Sans character subset specific to your language, translate
		   this to 'greek', 'cyrillic' or 'vietnamese'. Do not translate into your own language. */
		$subset = _x( 'no-subset', 'Open Sans font: add new subset (greek, cyrillic, vietnamese)', 'spine' );

		if ( 'cyrillic' == $subset )
			$subsets .= ',cyrillic,cyrillic-ext';
		elseif ( 'greek' == $subset )
			$subsets .= ',greek,greek-ext';
		elseif ( 'vietnamese' == $subset )
			$subsets .= ',vietnamese';

		$protocol = is_ssl() ? 'https' : 'http';
		$query_args = array(
			'family' => 'Open+Sans|ABeeZee|Oswald:400,700|Bilbo+Swash+Caps',
			'subset' => $subsets,
		);
		wp_enqueue_style( 'spine-fonts', add_query_arg( $query_args, "$protocol://fonts.googleapis.com/css" ), array(), null );
		wp_enqueue_style( 'fb-slimmenu', add_query_arg( $query_args, PDW_SPINE_CSS_URL. "slimmenu.css" ), array(), null );
	}

		/** This loads the main theme style.css */
		wp_enqueue_style( 'foundation', get_template_directory_uri(). '/css/foundation.css' );

		/** This loads the slideshow css */
		wp_enqueue_style( 'superslides', get_template_directory_uri(). '/css/superslides.css' );

		/** This loads the animation css */
		wp_enqueue_style( 'animate', get_template_directory_uri(). '/css/animate.css' );

		// Load New 2022 Styles
		wp_enqueue_style( '2022_styles', get_template_directory_uri(). '/css/styles-2022.css' );

		// Load Theme Settings CSS as a separate css file
		$admin_dir = (is_multisite()) ? site_url() . '/wp-admin/' : get_admin_url();
		wp_enqueue_style( 'theme-custom', $admin_dir . 'admin-ajax.php?action=fwf_dynamic_css');
}

add_action('wp_ajax_fwf_dynamic_css', 'fwf_dynamic_css');
add_action('wp_ajax_nopriv_fwf_dynamic_css', 'fwf_dynamic_css');

function fwf_dynamic_css() {
  require_once( get_template_directory(). '/css/custom.css.php' );
  exit;
}

/**
 * Load the necessary javascript files
 */
function pdw_spine_load_scripts() {


	wp_enqueue_script( 'modernizr.foundation', PDW_SPINE_JS_URL . 'modernizr.foundation.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'foundation', PDW_SPINE_JS_URL . 'foundation.min.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'foundation-buttons', PDW_SPINE_JS_URL . 'jquery.foundation.buttons.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'foundation-forms', PDW_SPINE_JS_URL . 'jquery.foundation.forms.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'foundation-mq-toggle', PDW_SPINE_JS_URL . 'jquery.foundation.mediaQueryToggle.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'foundation-navigation', PDW_SPINE_JS_URL . 'jquery.foundation.navigation.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'foundation-tabs', PDW_SPINE_JS_URL . 'jquery.foundation.tabs.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	//wp_enqueue_script( 'foundation-topbar', PDW_SPINE_JS_URL . 'jquery.foundation.topbar.js', array( 'jquery' ), PDW_SPINE_VERSION, true );
	//wp_enqueue_script( 'foundation-clearing', PDW_SPINE_JS_URL . 'jquery.foundation.clearing.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	//wp_enqueue_script( 'fwf-watermark', PDW_SPINE_JS_URL . 'jquery.watermark.min.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'fwf-viewportchecker', PDW_SPINE_JS_URL . 'vendor/jquery.viewportchecker.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'fwf-functions', PDW_SPINE_JS_URL . 'functions.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	$resizepoint = ( $resizepoint = get_theme_mod( 'theme_slimmenu_resizewidth' ) ) ? $resizepoint : 800;

	wp_localize_script( 'fwf-functions', 'fwf_slimmenu_resizepoint', array($resizepoint) );

	wp_enqueue_script( 'fwf-respond', PDW_SPINE_JS_URL . 'respond.min.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'fwf-slimmenu', PDW_SPINE_JS_URL . 'jquery.slimmenu.min.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'fwf-countdown', PDW_SPINE_JS_URL . 'jquery.countdown.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	/** This is the main javascript file */
	wp_enqueue_script( 'foundation-app', PDW_SPINE_JS_URL . 'app.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'scrollreveal', '//unpkg.com/scrollreveal', array( 'jquery' ), false, true );

	/** This loads the custom theme custom.js */
	if( is_child_theme() && locate_template('custom.js') ) {
		wp_enqueue_script( 'custom-js-child', get_stylesheet_directory_uri(). '/custom.js', array( 'jquery' ), PDW_SPINE_VERSION, true );
	} else {
		wp_enqueue_script( 'custom-js', get_template_directory_uri(). '/custom.js', array( 'jquery' ), PDW_SPINE_VERSION, true );
	}

	/** Superslides libraries */
	wp_enqueue_script( 'slider-easing', PDW_SPINE_JS_URL . 'jquery.easing.1.3.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'slider-animate', PDW_SPINE_JS_URL . 'jquery.animate-enhanced.min.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	wp_enqueue_script( 'slider-superslides', PDW_SPINE_JS_URL . 'jquery.superslides.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	//wp_enqueue_script( 'fwf-functions', PDW_SPINE_JS_URL . 'functions.js', array( 'jquery' ), PDW_SPINE_VERSION, true );

	//wp_enqueue_script( 'fwf-respond', PDW_SPINE_JS_URL . 'respond.min.js', array( 'jquery' ), PDW_SPINE_VERSION, true );


}


/* Defer parsing of JavaScript
function pdw_spine_defer_js_parsing( $url ) {
	if ( FALSE === strpos( $url, '.js' ) ) return $url;
	if ( strpos( $url, 'jquery.js' ) ) return $url;
	return "$url' defer async='";
}
add_filter( 'clean_url', 'pdw_spine_defer_js_parsing', 11, 1 );*/

/* Remove Query Strings */
function pdw_spine_remove_script_version( $src ){
	$parts = explode( '?', $src );
	return $parts[0];
}
//add_filter( 'script_loader_src', 'pdw_spine_remove_script_version', 15, 1 );
//add_filter( 'style_loader_src', 'pdw_spine_remove_script_version', 15, 1 );

/**
 * Load the necessary javascript files for admin
 */
function pdw_spine_load_admin_scripts( $hook ) {
	if ( $hook = 'appearance_page_theme-settings' ) {
		wp_enqueue_script( 'fwf-ace', PDW_SPINE_JS_URL . 'vendor/ace/ace.js', array('jquery') );
	}

	wp_enqueue_script( 'fwf-admin', PDW_SPINE_JS_URL . 'admin.functions.js', array('jquery') );
}

function pdw_spine_admin_head() {
	echo '<style>.modal.wpb-elements-list-modal { z-index: 99999 !important; } .modal-header .close { z-index: 2 !important; } .vc_license-activation-notice { display: none !important; }</style>';

	wp_enqueue_style( 'fwf-admin', get_template_directory_uri() . '/admin.css' );
}

add_filter( 'admin_body_class', 'pdw_add_admin_class', 99999 );

function pdw_add_admin_class( $classes ) {
	global $current_user;

	if( is_super_admin($current_user->ID) ) {
		$classes .= 'fwf-superadmin';

	} elseif ( array_key_exists( 'administrator', $current_user->allcaps ) ) {
		$classes .= 'fwf-admin';

	}
	if( array_key_exists( 'editor', $current_user->allcaps ) ) {
		$classes .= 'fwf-editor';

	}
	if( array_key_exists( 'subscriber', $current_user->allcaps ) ) {
		$classes .= 'fwf-subscriber';

	}

	return $classes;
}

/**
 * This is a fix for when a user sets a custom background color with no custom background image.  What
 * happens is the theme's background image hides the user-selected background color.  If a user selects a
 * background image, we'll just use the WordPress custom background callback.
 *
 * @since 0.1.0
 * @link  http://core.trac.wordpress.org/ticket/16919
 */
function pdw_spine_custom_background_callback() {

	/* Get the background image. */
	$image = get_background_image();

	/* If there's an image, just call the normal WordPress callback. We won't do anything here. */
	if ( ! empty( $image ) ) {
		_custom_background_cb();
		return;
	}

	/* Get the background color. */
	$color = get_background_color();

	/* If no background color, return. */
	if ( empty( $color ) )
		return;

	/* Use 'background' instead of 'background-color'. */
	$style = "background: #{$color};";

	?>
<style type="text/css">body.custom-background { <?php echo trim( $style ); ?> }</style>
<?php

}

/**
 * Registers custom fonts for the Theme Fonts extension.
 *
 * @since 1.0
 * @access public
 * @param  object  $theme_fonts
 * @return void
 */
function pdw_spine_register_fonts( $theme_fonts ) {

	/* Add the 'headlines' font setting. */
	$theme_fonts->add_setting(
		array(
			'id'        => 'headlines',
			'label'     => __( 'Headlines', 'fitnessthemes' ),
			'default'   => 'lato',
			'selectors' => 'h1, h2, h3, h4, h5, h6, th, .top-navbar li a, #menu-portfolio li a, .breadcrumb-trail, .page-links, .loop-pagination, .loop-nav, #respond input[type="submit"], #footer',
		)
	);
	$theme_fonts->add_setting(
		array(
			'id'        => 'body_font',
			'label'     => __( 'Body Text', 'fitnessthemes' ),
			'default'   => 'open-sans',
			'selectors' => 'body',
		)
	);

	/* Add fonts that users can select for this theme. */

	$theme_fonts->add_font(
		array(
			'handle' => 'arial',
			'label'  => __( 'Arial', 'fitnessthemes' ),
			'stack'  => 'Arial, Helvetica, sans-serif'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'trebuchet-font-stack',
			'label'  => __( 'Trebuchet (font stack)', 'fitnessthemes' ),
			'stack'  => '"Segoe UI", Candara, "Bitstream Vera Sans", "DejaVu Sans", "Bitstream Vera Sans", "Trebuchet MS", Verdana, "Verdana Ref", sans-serif'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'georgia-font-stack',
			'label'  => __( 'Georgia (font stack)', 'fitnessthemes' ),
			'stack'  => ' Constantia, "Lucida Bright", Lucidabright, "Lucida Serif", Lucida, "DejaVu Serif", "Bitstream Vera Serif", "Liberation Serif", Georgia, serif',
		)
	);

	$theme_fonts->add_font(
		array(
			'handle' => 'arvo',
			'label'  => __( 'Arvo', 'fitnessthemes' ),
			'family' => 'Arvo',
			'weight' => '400,500,600,700',
			'stack'  => 'Arvo, serif',
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'droid',
			'label'  => __( 'Droid Sans', 'fitnessthemes' ),
			'family' => 'Droid Sans',
			'weight' => '400,500,600,700',
			'stack'  => "'Droid Sans', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'exo',
			'label'  => __( 'Exo', 'fitnessthemes' ),
			'family' => 'Exo',
			'weight' => '400,500,600,700',
			'stack'  => "'Exo', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'josefin-sans',
			'label'  => __( 'Josefin Sans', 'fitnessthemes' ),
			'family' => 'Josefin Sans',
			'weight' => '400,500,600,700',
			'stack'  => "'Josefin Sans', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'lato',
			'label'  => __( 'Lato', 'fitnessthemes' ),
			'family' => 'Lato',
			'weight' => '300,400,500,600,700,900',
			'stack'  => "Lato, sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'montserrat',
			'label'  => __( 'Montserrat', 'fitnessthemes' ),
			'family' => 'Montserrat',
			'weight' => '400,500,600,700',
			'stack'  => "Montserrat, sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'muli',
			'label'  => __( 'Muli', 'fitnessthemes' ),
			'family' => 'Muli',
			'weight' => '400,500,600,700',
			'stack'  => "Muli, sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'open-sans',
			'label'  => __( 'Open Sans', 'fitnessthemes' ),
			'family' => 'Open Sans',
			'weight' => '400,500,600,700',
			'stack'  => "'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'open-sans-condensed-700',
			'label'  => __( 'Open Sans Condensed (700)', 'fitnessthemes' ),
			'family' => 'Open Sans Condensed',
			'weight' => '700',
			'stack'  => "'Open Sans Condensed', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'oswald',
			'label'  => __( 'Oswald', 'fitnessthemes' ),
			'family' => 'oswald',
			'weight' => '400,500,600,700',
			'stack'  => "'Oswald', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'pt-sans',
			'label'  => __( 'PT Sans', 'fitnessthemes' ),
			'family' => 'PT Sans',
			'weight' => '400,500,600,700',
			'stack'  => "'PT Sans', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'pt-sans',
			'label'  => __( 'PT Sans', 'fitnessthemes' ),
			'family' => 'PT Sans',
			'weight' => '400,500,600,700',
			'stack'  => "'PT Sans', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'raleway',
			'label'  => __( 'Raleway', 'fitnessthemes' ),
			'family' => 'Raleway',
			'weight' => '400,500,600,700',
			'stack'  => "'Raleway', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'roboto',
			'label'  => __( 'Roboto', 'fitnessthemes' ),
			'family' => 'Roboto',
			'weight' => '400,500,700,900',
			'stack'  => "'Roboto', sans-serif",
			'type'   => 'google'
		)
	);
	$theme_fonts->add_font(
		array(
			'handle' => 'roboto-condensed',
			'label'  => __( 'Roboto Condensed', 'fitnessthemes' ),
			'family' => 'Roboto Condensed',
			'weight' => '300,400,700',
			'stack'  => "'Roboto Condensed', sans-serif",
			'type'   => 'google'
		)
	);
}

/**
 * Registers colors for the Color Palette extension.
 *
 * @since 1.0
 * @access public
 * @param  object  $color_palette
 * @return void
 */
function pdw_spine_register_colors( $color_palette ) {

	/* Add custom colors. */
	/* $color_palette->add_color(
		array( 'id' => 'header_bg_color', 'label' => __( 'Header Background Color (Optional)', 'fitnessthemes' ), 'default' => '' )
	);
	$color_palette->add_color(
		array( 'id' => 'color_scheme', 'label' => __( 'Overall Color Scheme', 'fitnessthemes' ), 'default' => '' )
	);*/
	$color_palette->add_color(
		array( 'id' => 'primary', 'label' => __( 'Primary Color (Links, icons, & accent)', 'fitnessthemes' ), 'default' => '03c1ca' )
	);
	$color_palette->add_color(
		array( 'id' => 'button_bg', 'label' => __( 'Button Background', 'fitnessthemes' ), 'default' => '03c1ca' )
	);
	$color_palette->add_color(
		array( 'id' => 'button_bg_hover', 'label' => __( 'Button Background Hover', 'fitnessthemes' ), 'default' => '00abc9' )
	);
	$color_palette->add_color(
		array( 'id' => 'button_text', 'label' => __( 'Button Text', 'fitnessthemes' ), 'default' => 'ffffff' )
	);
	$color_palette->add_color(
		array( 'id' => 'button_text_hover', 'label' => __( 'Button Text Hover', 'fitnessthemes' ), 'default' => 'ffffff' )
	);
	$color_palette->add_color(
		array( 'id' => 'menu_primary_1', 'label' => __( 'Primary Nav Link', 'fitnessthemes' ), 'default' => '333333' )
	);
	$color_palette->add_color(
		array( 'id' => 'menu_primary_1_hover', 'label' => __( 'Primary Nav Link Hover', 'fitnessthemes' ), 'default' => '666666' )
	);
	$color_palette->add_color(
		array( 'id' => 'menu_primary_2', 'label' => __( 'Primary Dropdown Menu', 'fitnessthemes' ), 'default' => '333333' )
	);
	$color_palette->add_color(
		array( 'id' => 'menu_primary_2_hover', 'label' => __( 'Primary Dropdown Hover', 'fitnessthemes' ), 'default' => '666666' )
	);
	$color_palette->add_color(
		array( 'id' => 'body_color', 'label' => __( 'Body Text', 'fitnessthemes' ), 'default' => '666666' )
	);
	$color_palette->add_color(
		array( 'id' => 'tagline_color', 'label' => __( 'Headlings (H1-6)', 'fitnessthemes' ), 'default' => '222222' )
	);
	$color_palette->add_color(
		array( 'id' => 'slide_text', 'label' => __( 'Slide Texts', 'fitnessthemes' ), 'default' => 'ffffff' )
	);
	$color_palette->add_color(
		array( 'id' => 'footer_color', 'label' => __( 'Footer Text', 'fitnessthemes' ), 'default' => 'ffffff' )
	);
	$color_palette->add_color(
		array( 'id' => 'login_screen_background', 'label' => __( 'Login Screen Background', 'fitnessthemes' ), 'default' => 'aab5bf' )
	);
	$color_palette->add_color(
		array( 'id' => 'mobile_menu_background', 'label' => __( 'Mobile Menu Background Color', 'fitnessthemes' ), 'default' => 'aab5bf' )
	);
	$color_palette->add_color(
		array( 'id' => 'mobile_menu_link', 'label' => __( 'Mobile Menu Link Color', 'fitnessthemes' ), 'default' => 'aab5bf' )
	);


	/* Add rule sets for colors. */
	$color_palette->add_rule_set(
		'header_bg_color',
		array(
			'background-color'    => 'div.header'
		)
	);

	$color_palette->add_rule_set(
		'mobile_menu_background',
		array(
			'background-color'    => '.mobile__nav-menu'
		)
	);

	$color_palette->add_rule_set(
		'mobile_menu_link',
		array(
			'color'    => '.mobile__nav-menu li a'
		)
	);

	$color_palette->add_rule_set(
		'color_scheme',
		array(
			'background-color'    => 'footer, .nav-bar, .nav-bar > li',
			'border-color' 		  => 'hr'
		)
	);

	$color_palette->add_rule_set(
		'primary',
		array(
			'color'               => 'a, pre, code, .breadcrumb-trail a, .page-numbers.current, .format-link .entry-title a .meta-nav, #respond label .required,  .accent, accent_color, accent-color, li.comment .comment-reply-link:hover, .top-navbar .menu > li.active > a, .top-navbar .menu > li.active, .home_optin_box h4, .testimonial_container h5 .alt_color, h2.post-title, h2.entry-title a, h1.page-title, h1.entry-title a, h1.entry-title, .transformations h3, .read-stories, h1.page-title, h1.loop-title, .fwf-top-scroll a:hover, .shadow .slide-container h3, .fl-heading-text, .mobile__nav-social li a',
			'background-color'    => '.woocommerce-store-notice, p.demo_store, ul.flyout li.active a, .nav-bar li ul li.active a, .contact-icon, .lessons_sidebar_widget .widget-title, .thanks-payment-info, ul.slimmenu.collapsed li, .guarantee, .social_icons a, .phone_number .icon, .address .icon, .member_login .icon, .box_center .more_info, .wod_datemeta, .top-navbar .menu > li:hover, .top-navbar li ul li a:hover, h2.post-title, .popmake input[type="submit"], .video-opt-play',
			'border-bottom-color' => 'footer h5.widget-title, .breaadcrumb-trail a:hover, .sticky.hentry, .loop-meta, .page-template-portfolio .hentry.page',
			'border-top-color' => '.hentry, .loop-meta, .attachment-meta, #comments-template, .page-template-portfolio .hentry.page, .thanks-payment-info:after',
			'--primary' => ':root'
		)
	);

	$color_palette->add_rule_set(
		'button_bg',
		array(
			'background-color'    => '.fwf-button, .button, input[type="submit"]'
		)
	);

	$color_palette->add_rule_set(
		'button_bg_hover',
		array(
			'background-color'    => '.fwf-button:hover, .button:hover, input[type="submit"]:hover'
		)
	);

	$color_palette->add_rule_set(
		'button_text',
		array(
			'color'    => '.fwf-button, .button, input[type="submit"]'
		)
	);

	$color_palette->add_rule_set(
		'button_text_hover',
		array(
			'color'    => '.fwf-button:hover, .button:hover, input[type="submit"]:hover'
		)
	);

	$color_palette->add_rule_set(
		'menu_primary_1',
		array(
			'color'            => 'ul.slimmenu li a, .top-navbar .menu > li.active > a, .top-navbar .menu > li.active',
			'background-color' => '#menu-primary li li a:hover, #menu-primary li li:hover > a'
		)
	);

	$color_palette->add_rule_set(
		'menu_primary_1_hover',
		array(
			'color'            => 'ul.slimmenu li a:hover, .top-navbar .menu > li.active > a:hover, .top-navbar .menu > li.active'
		)
	);

	$color_palette->add_rule_set(
		'menu_primary_2',
		array(
			'color'               => 'ul.slimmenu li li a, #menu-primary li li a, #menu-primary li li > a, #menu-primary li li.current-menu-item > a'
		)
	);

	$color_palette->add_rule_set(
		'menu_primary_2_hover',
		array(
			'color'               => 'ul.slimmenu li li a:hover, #menu-primary li li a:hover, #menu-primary li li > a:hover, #menu-primary li li.current-menu-item > a:hover'
		)
	);

	$color_palette->add_rule_set(
		'menu_primary_1_sub',
		array(
			'color'               => '',
		)
	);

	$color_palette->add_rule_set(
		'slide_text',
		array(
			'color'    => '.slide-container, .slide-container h2, .slide-container h3, .slide-container h4, .slide-container h5, .slide-container h6, .slide-container ul'
		)
	);

	$color_palette->add_rule_set(
		'tagline_color',
		array(
			'color'    => '.wpb_text_column h1, .wpb_text_column h2, .wpb_text_column h3, .wpb_text_column h4, .wpb_text_column h5, .wpb_text_column h6, #site-description, #site-description small'
		)
	);

	$color_palette->add_rule_set(
		'body_color',
		array(
			'color'    => 'body, p'
		)
	);
	
	$color_palette->add_rule_set(
		'footer_color',
		array(
			'color'    => 'footer'
		)
	);
}

function pdw_spine_hasSub( $menu_item_id, $items ) {
	foreach ( $items as $item ) {
		if ( $item->menu_item_parent && $item->menu_item_parent == $menu_item_id ) {
			return true;
		}
	}
	return false;
}

function pdw_spine_add_active_class( $items ) {
	foreach ( $items as $item ) {
		$current_element_markers = array( 'current-menu-item', 'current-menu-parent', 'current-menu-ancestor' );
		$current_class           = array_intersect( $current_element_markers, $item->classes );
		if ( ! empty( $current_class ) ) {
			$item->classes[] = 'active'; // all elements of field "classes" of a menu item get join together and render to class attribute of <li> element in HTML
		}
	}
	return $items;
}

/** Customize loop pagination extension */
function pdw_spine_foundation_pagination( $args ) {
	$args['before'] = '<div class="loop-pagination">';

	$args['type'] = 'list';

	return $args;
}

function pdw_spine_register_widgets() {
	/** Customize Nav Menu Widget */
	include_once  'includes/widget-nav-menu.php';

	/* Register the nav menu widget. */
	register_widget( 'Spine_Widget_Nav_Menu' );
}

function pdw_spine_add_featured_img_class( $img_html ) {
	/** Only do this is there's an image */
	if ( ! empty( $img_html ) )
		$img_html = '<a class="th" href="' . get_permalink( get_the_ID() ) . '" title="' . esc_attr( get_post_field( 'post_title', get_the_ID() ) ) . '">' . $img_html . '</a>';

	return $img_html;
}

function pdw_spine_fetch_bg_images() {
	$directory = PDW_SPINE_DIR . '/backgrounds/';
	//get all image files with a .jpg extension.
	$images = glob( $directory . "*.jpg" );

	return $images;
}


function pdw_spine_fetch_content_grid_classes() {

	/** Set the grid column span */
	$span_cols = apply_filters( 'spine_content_span_cols', 'twelve columns' );

		/** Layout logic  */
		if( is_singular() || is_archive() ) {
			$layout = get_post_layout( get_the_ID() );

			if( $layout == 'default' && !is_page() ) {
				$layout = get_theme_mod( 'theme_layout_blog' );
			}
		}

		if ( empty($layout) ) {
			$layout = ( $global_layout = get_theme_mod( 'theme_layout' ) ) ? $global_layout : 'default';
		}

		//Supports new content type
		$post_type = get_post_type($post->ID);
		if( in_array($post_type, array('training-plan', 'workout', 'pmpro_series') ) )
			$layout = '1c';

		switch ( $layout ) {
			case 'default':
				if( is_page_template( 'templates/blog-page.php') || is_home() || ( is_home() && get_option('show_on_front') == 'posts' ) ) {
					$content_classes = "eight columns";
				} else {
					$content_classes = $span_cols;
				}
				break;
			case '1c':
				$content_classes = "twelve columns";
				break;
			case '2c-l':
				$content_classes = "eight columns";
				break;
			case '2c-r':
				$content_classes = $span_cols . " push-four";
				break;
			default:
				$content_classes = $span_cols;
				break;
		} // end switch

	return $content_classes;
}

function pdw_spine_fetch_sidebar_grid_classes() {

	$span_cols = apply_filters( 'spine_sidebar_span_cols', 'four columns' );

		/** Layout logic  */
		if( is_singular() || is_archive() ) {
			$layout = get_post_layout( get_the_ID() );

			if( $layout = 'default' && !is_page() ) {
				$layout = get_theme_mod( 'theme_layout_blog' );
			}
		}
		if ( empty($layout) || 'default' == $layout ) {
			$layout = get_theme_mod( 'theme_layout' );
		}

		switch ( $layout ) {
			case 'default' :
				$sidebar_classes = "twelve columns";
				break;
			case '1c' :
				/* Won't be displayed anyway */
				$sidebar_classes = "twelve columns";
				break;
			case '2c-l':
				$sidebar_classes = $span_cols;
				break;
			case '2c-r':
				$sidebar_classes = $span_cols . " pull-eight";
				break;
			default:
				$sidebar_classes =  "twelve columns";
				break;
		} //end switch

	return $sidebar_classes;
}

/**
 * Function for deciding which pages should have a one-column layout.
 *
 * @since 1.2.0
 */
function pdw_spine_one_column() {

	if( ( is_attachment() && 'layout-default' == theme_layouts_get_layout() ) || ( is_page() && 'layout-default' == theme_layouts_get_layout() ) ) {
		add_filter( 'get_theme_layout', 'pdw_spine_theme_layout_one_column' );
	}

}

/**
 * Filters 'get_theme_layout' by returning 'layout-1c'.
 *
 * @since 1.2.0
 * @param string $layout The layout of the current page.
 * @return string
 */
function pdw_spine_theme_layout_one_column( $layout ) {
	return 'layout-1c';
}

/**
 * Disables sidebars if viewing a one-column page.
 *
 * @since 1.2.0
 * @param array $sidebars_widgets A multidimensional array of sidebars and widgets.
 * @return array $sidebars_widgets
 */
function pdw_spine_disable_sidebars( $sidebars_widgets ) {
	global $wp_query, $wp_customize;

	if ( current_theme_supports( 'theme-layouts' ) && !is_admin() ) {
		if ( ! isset( $wp_customize ) ) {
			if ( 'layout-1c' == theme_layouts_get_layout() ) {
				$sidebars_widgets['primary'] = false;
				//$sidebars_widgets['secondary'] = false;
			}
		}
	}

	return $sidebars_widgets;
}

/**
 * Insert customizer styles to document head
 */
function pdw_spine_wp_head() {
	$prefix = hybrid_get_prefix(); ?>
	<script src="https://kit.fontawesome.com/a8cea9ec93.js" crossorigin="anonymous"></script>
	<?php
		
	$container_maxwidth = get_theme_mod( 'theme_container_maxwidth' );

	echo "<style type=\"text/css\"> .row { max-width: {$container_maxwidth}px; }";

	// offset the marg\in top
	if( get_theme_mod( $prefix.'_logo' ) ) {
		$logo_img_id = pdw_spine_get_image_id( get_theme_mod( $prefix.'_logo' ) );
		$logo_img = wp_get_attachment_image_src($logo_img_id, 'full' );
		$offset = ( $logo_img[2] - 94 ) + 115;
		echo ".opening-container { margin-top: -{$offset}px }";
	}
	echo "</style>\n\n";

	//Custom code for the <head> tag
	if ($misc_custom_head = hybrid_get_setting( 'misc_custom_head' )):
		echo $misc_custom_head. "\n\r";
	endif;

	if ( get_theme_mod( 'theme_auth_nav_link' ) ):
		add_filter('wp_nav_menu_items', 'fwf_add_auth_link', 10, 2); 
	endif;
}
add_action( 'wp_head', 'pdw_spine_wp_head', 10 );

function fwf_add_auth_link($items, $args) {         
	ob_start();
	wp_loginout('index.php');
	$loginoutlink = ob_get_contents();
	ob_end_clean();
	$items .= '<li class="fwf_login_link">'. $loginoutlink .'</li>';
	return $items;
}

/**
 * Returns a set of image attachment links based on size.
 *
 * @since 0.1.0
 * @return string Links to various image sizes for the image attachment.
 */
function spine_get_image_size_links() {

	/* If not viewing an image attachment page, return. */
	if ( !wp_attachment_is_image( get_the_ID() ) )
		return;

	/* Set up an empty array for the links. */
	$links = array();

	/* Get the intermediate image sizes and add the full size to the array. */
	$sizes = get_intermediate_image_sizes();
	$sizes[] = 'full';

	/* Loop through each of the image sizes. */
	foreach ( $sizes as $size ) {

		/* Get the image source, width, height, and whether it's intermediate. */
		$image = wp_get_attachment_image_src( get_the_ID(), $size );

		/* Add the link to the array if there's an image and if $is_intermediate (4th array value) is true or full size. */
		if ( !empty( $image ) && ( true === $image[3] || 'full' == $size ) )
			$links[] = "<a class='image-size-link' href='" . esc_url( $image[0] ) . "'>{$image[1]} &times; {$image[2]}</a>";
	}

	/* Join the links in a string and return. */
	return join( ' <span class="sep">/</span> ', $links );
}

/**
 * Displays an attachment image's metadata and exif data while viewing a singular attachment page.
 *
 * Note: This function will most likely be restructured completely in the future.  The eventual plan is to
 * separate each of the elements into an attachment API that can be used across multiple themes.  Keep
 * this in mind if you plan on using the current filter hooks in this function.
 *
 * @since 0.1.0
 */
function spine_image_info() {

	/* Set up some default variables and get the image metadata. */
	$meta = wp_get_attachment_metadata( get_the_ID() );
	$items = array();
	$list = '';

	/* Add the width/height to the $items array. */
	$items['dimensions'] = sprintf( __( '<span class="prep">Dimensions:</span> %s', 'fitnessthemes' ), '<span class="image-data"><a href="' . esc_url( wp_get_attachment_url() ) . '">' . sprintf( __( '%1$s &#215; %2$s pixels', 'fitnessthemes' ), $meta['width'], $meta['height'] ) . '</a></span>' );

	/* If a timestamp exists, add it to the $items array. */
	if ( !empty( $meta['image_meta']['created_timestamp'] ) )
		$items['created_timestamp'] = sprintf( __( '<span class="prep">Date:</span> %s', 'fitnessthemes' ), '<span class="image-data">' . date( get_option( 'date_format' ), $meta['image_meta']['created_timestamp'] ) . '</span>' );

	/* If a camera exists, add it to the $items array. */
	if ( !empty( $meta['image_meta']['camera'] ) )
		$items['camera'] = sprintf( __( '<span class="prep">Camera:</span> %s', 'fitnessthemes' ), '<span class="image-data">' . $meta['image_meta']['camera'] . '</span>' );

	/* If an aperture exists, add it to the $items array. */
	if ( !empty( $meta['image_meta']['aperture'] ) )
		$items['aperture'] = sprintf( __( '<span class="prep">Aperture:</span> %s', 'fitnessthemes' ), '<span class="image-data">' . sprintf( __( 'f/%s', 'fitnessthemes' ), $meta['image_meta']['aperture'] ) . '</span>' );

	/* If a focal length is set, add it to the $items array. */
	if ( !empty( $meta['image_meta']['focal_length'] ) )
		$items['focal_length'] = sprintf( __( '<span class="prep">Focal Length:</span> %s', 'fitnessthemes' ), '<span class="image-data">' . sprintf( __( '%s mm', 'fitnessthemes' ), $meta['image_meta']['focal_length'] ) . '</span>' );

	/* If an ISO is set, add it to the $items array. */
	if ( !empty( $meta['image_meta']['iso'] ) )
		$items['iso'] = sprintf( __( '<span class="prep">ISO:</span> %s', 'fitnessthemes' ), '<span class="image-data">' . $meta['image_meta']['iso'] . '</span>' );

	/* If a shutter speed is given, format the float into a fraction and add it to the $items array. */
	if ( !empty( $meta['image_meta']['shutter_speed'] ) ) {

		if ( ( 1 / $meta['image_meta']['shutter_speed'] ) > 1 ) {
			$shutter_speed = '1/';

			if ( number_format( ( 1 / $meta['image_meta']['shutter_speed'] ), 1 ) ==  number_format( ( 1 / $meta['image_meta']['shutter_speed'] ), 0 ) )
				$shutter_speed .= number_format( ( 1 / $meta['image_meta']['shutter_speed'] ), 0, '.', '' );
			else
				$shutter_speed .= number_format( ( 1 / $meta['image_meta']['shutter_speed'] ), 1, '.', '' );
		} else {
			$shutter_speed = $meta['image_meta']['shutter_speed'];
		}

		$items['shutter_speed'] = sprintf( __( '<span class="prep">Shutter Speed:</span> %s', 'fitnessthemes' ), '<span class="image-data">' . sprintf( __( '%s sec', 'fitnessthemes' ), $shutter_speed ) . '</span>' );
	}

	/* Allow devs to overwrite the array of items. */
	$items = apply_atomic( 'image_info_items', $items );

	/* Loop through the items, wrapping each in an <li> element. */
	foreach ( $items as $item )
		$list .= "<li>{$item}</li>";

	/* Format the HTML output of the function. */
	$output = '<div class="image-info"><h3>' . __( 'Image Info', 'picturesque' ) . '</h3><ul>' . $list . '</ul></div>';

	/* Display the image info and allow devs to overwrite the final output. */
	echo apply_atomic( 'image_info', $output );
}


add_filter('wp_get_attachment_image_attributes','pdw_spine_attachment_attrs',10,2);
function pdw_spine_attachment_attrs($attr, $attachment ){
	$attr['data-caption'] = $attachment->post_title;
	return $attr;
}

//temporary shortcoder
function spine_shortcoder( $content ) {

	$content = str_replace('[sectionbox]', '<div class="sectionbox">', $content);
	$content = str_replace('[/sectionbox]', '</div>', $content);
	$content = str_replace('[johnsonbox_feature]', '<div class="johnsonbox_feature">', $content);
	$content = str_replace('[/johnsonbox_feature]', '</div>', $content);

	$content = str_replace('[MY_CITY]', hybrid_get_setting('uo_my_city'), $content);
	$content = str_replace('[MY_STATE]', hybrid_get_setting('uo_my_state'), $content);
	$content = str_replace('[YEAR]', hybrid_get_setting('uo_year'), $content);
	$content = str_replace('[MY_NAME]', hybrid_get_setting('uo_my_name'), $content);
	$content = str_replace('[BUSINESS_NAME]', hybrid_get_setting('uo_business_name'), $content);
	$content = str_replace('[PHONE_NUMBER]', hybrid_get_setting('uo_phone_number'), $content);
	$content = str_replace('[LIST_OF_CITIES]', hybrid_get_setting('uo_list_of_cities'), $content);
	$content = str_replace('[LIST_OF_ZIPCODES]', hybrid_get_setting('uo_list_of_zipcodes'), $content);
	$content = str_replace('[SIGN_UP_BUTTON]', hybrid_get_setting('uo_sign_up_button'), $content);

	return $content;
}
add_filter('the_content', 'spine_shortcoder', 10);

/*
* Add page title on/off option for Sales site only and Combo type
*/
add_action('add_meta_boxes', 'spine_pagetitle_box');
add_action('save_post', 'spine_pagetitle_save');

function spine_pagetitle_box() {
    add_meta_box(
        'spine_page_title',
        __('Theme Options', 'fitnessthemes'),
        'spine_pagetitle_inner_custom_box',
        'page',
		'side',
		'default'
    );
}
function spine_pagetitle_inner_custom_box($post) {
  // Use nonce for verification
  wp_nonce_field('spine_action', 'spine_pagemeta');

  // The actual fields for data entry
  echo '<label for="spine_pagetitle_field">';
       _e("Disable page title", 'fitnessthemes' );
  echo '</label> ';
  echo '<input type="checkbox" id="spine_pagetitle_field" name="spine_pagetitle_field" value="1" '.((is_pageTitleHidden() === true) ? 'checked="checked"' : '').' /><br />';

  echo '<label for="spine_pagenav_field">';
       _e("Disable nav menu", 'fitnessthemes' );
  echo '</label> ';
  echo '<input type="checkbox" id="spine_pagenav_field" name="spine_pagenav_field" value="1" '.((is_pageNavHidden() === true) ? 'checked="checked"' : '').' /><br />';

   echo '<label for="spine_videooptin_field">';
       _e("Disable Ultimate Offer", 'fitnessthemes' );
  echo '</label> ';
  echo '<input type="checkbox" id="spine_videooptin_field" name="spine_videooptin_field" value="1" '.((is_pageUltimateOfferHidden() === true) ? 'checked="checked"' : '').' /><br />';
}

function spine_pagetitle_save($post_id) {
  //Make sure it's not saved by auto save routine
  if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE || empty($post_id) )
    return $post_id;

  // verify this came from the our screen and with proper authorization,
  if (!wp_verify_nonce($_POST['spine_pagemeta'], 'spine_action'))
      return;

  //Check permissions
  if ($_POST['post_type'] == 'page') {
    if (!current_user_can('edit_page', $post_id))
      return $post_id;
  } else {
    if (!current_user_can('edit_post', $post_id))
      return $post_id;
  }
  //Authentication done - Save the data
	if(isset($_POST['spine_pagetitle_field'])) {
	  $pagetitle = intval($_POST['spine_pagetitle_field']);
	  if($pagetitle == 1) {
		update_post_meta($post_id,'_hide_pagetitle','1');
	  } else {
		delete_post_meta($post_id, '_hide_pagetitle');
	  }
	}
	if(isset($_POST['spine_pagenav_field'])) {
	  $pagenav = intval($_POST['spine_pagenav_field']);
	  if($pagenav == 1) {
		update_post_meta($post_id,'_hide_pagenav','1');
	  } else {
		delete_post_meta($post_id, '_hide_pagenav');
	  }
	}
	if(isset($_POST['spine_videooptin_field'])) {
	  $pagenav = intval($_POST['spine_videooptin_field']);
	  if($pagenav == 1) {
		update_post_meta($post_id,'_hide_UltimateOffer','1');
	  } else {
		delete_post_meta($post_id, '_hide_UltimateOffer');
	  }
	}
}
/*
* Check to see if page tile is disabled
*/
function is_pageTitleHidden() {
	global $post;
	$post_id = ( is_home() && get_option('page_for_posts') ) ? get_option('page_for_posts') : $post->ID;

	if(get_post_meta($post_id, '_hide_pagetitle', true) == 1) {
		return true;
	} else {
		return false;
	}
}
/*
* Check to see if navigation menu is disabled
*/
function is_pageNavHidden() {
	global $post;
	if(get_post_meta($post->ID, '_hide_pagenav', true) == 1) {
		return true;
	} else {
		return false;
	}
}
/*
* Check to see if Ultimate Offer Boxes are disabled
*/
function is_pageUltimateOfferHidden() {
	global $post;
	if(get_post_meta($post->ID, '_hide_UltimateOffer', true) == 1) {
		return true;
	} else {
		return false;
	}
}

function spine_wp_footer() {
?>
<script>
<?php if( get_theme_mod( 'theme_shrink_header' ) ) { ?>
	jQuery(document).on("scroll", function(){
		if( jQuery(document).scrollTop() > 80 ) {
			jQuery(".shadow").addClass("fwf-shrink"); } else {
			jQuery(".shadow").removeClass("fwf-shrink");
		}
	});
<?php } ?>
<?php if( get_theme_mod( 'theme_center_logo' ) && isUserAgentMobile() === FALSE ):  // Logo Center Alignment in the Primary Nav Menu
	$menu_name = wp_get_nav_menu_name('primary');
	$menu_items = wp_get_nav_menu_items($menu_name);
	$top_level_items = 0;

	foreach ($menu_items as $item) {
		if( $item->menu_item_parent === '0' ) {
			$top_level_items++;
		}
	}
	$break_point = ceil( $top_level_items / 2 );
?>
	jQuery(document).ready(function($) {
		$("header.header").addClass("fwf-logo-center");
		var $getUrl = window.location;
		var $baseUrl = $getUrl .protocol + "//" + $getUrl.host + "/" + $getUrl.pathname.split('/')[1];
		var $logoImg = $('.site-logo img').attr('src');
		var $logoPath = "<a href='" + $baseUrl + "'><img src='" + $logoImg + "' class='nav-inline-logo<?php echo $my_menu->count; ?>' /></a>";
		$('#primary-nav > li:nth-child(<?php echo $break_point; ?>)').after($logoPath);
	});
<?php endif; ?>
jQuery(document).ready(function($) { $(document).foundation(); });
</script>

<?php
	//Custom code before <body> tag
	if ($misc_custom_footer = hybrid_get_setting( 'misc_custom_footer' )):
		echo $misc_custom_footer. "\n\r";
	endif;
}
add_action('wp_footer', 'spine_wp_footer', 99);

function fwf_wp_footer() { ?>
	<script>
	jQuery(function(jQuery) {
	  jQuery('#slides').superslides({
		inherit_width_from: '.wide-container',
		inherit_height_from: '.wide-container',
		animation: 'fade',
		play: 9000
	  });
	});

	</script>
<?php
}

/*
/* Hook to add custom content immediately after <body>
*/
if ( !function_exists( 'fb_before_body' ) ) {
	function fb_before_body() {
		do_action('fb_before_body');
	}
}

function pdw_spine_social_icons() {
	global $post;
	$url_facebook = get_theme_mod('theme_url_facebook');
	$url_twitter = get_theme_mod('theme_url_twitter');
	$url_youtube = get_theme_mod('theme_url_youtube');
	$url_yelp = get_theme_mod('theme_url_yelp');
	$url_instagram = get_theme_mod('theme_url_instagram');
	$url_googleplus = get_theme_mod('theme_url_googleplus');
?>
	<div class="mobile__nav-social">
		<ul class="social_media">

		 <?php if( $url_facebook = get_theme_mod('theme_url_facebook') ): ?><li class="facebook"><a href="<?php echo $url_facebook ?>" target="_new" rel="me"><i class="fab fa-facebook"></i><label>Facebook</label></a></li><?php endif; ?>

		 <?php if( $url_twitter = get_theme_mod('theme_url_twitter') ): ?><li class="twitter"><a href="<?php echo $url_twitter ?>" target="_new" rel="me"><i class="fab fa-twitter"></i><label>Twitter</label></a></li><?php endif; ?>

		 <?php if( $url_youtube = get_theme_mod('theme_url_youtube') ): ?><li class="youtube"><a href="<?php echo $url_youtube ?>" target="_new" rel="me"><i class="fab fa-youtube"></i><label>YouTube</label></a></li><?php endif; ?>

		 <?php if( $url_instagram = get_theme_mod('theme_url_instagram') ): ?><li class="instagram"><a href="<?php echo $url_instagram ?>" target="_new" rel="me"><i class="fab fa-instagram"></i><label>Instagram</label></a></li><?php endif; ?>

		 <?php if( $url_googleplus = get_theme_mod('theme_url_googleplus') ): ?><li class="googleplus"><a href="<?php echo $url_googleplus ?>" target="_new" rel="publisher"><i class="fab fa-google"></i></a><label>Google</label></li><?php endif; ?>

		 <?php if( $url_yelp = get_theme_mod('theme_url_yelp') ): ?><li class="yelp"><a href="<?php echo $url_yelp ?>" target="_new" rel="me"><i class="fab fa-yelp"></i><label>Yelp</label></a></li><?php endif; ?>

		 <?php if ( '' != ( $member_login = get_theme_mod('theme_url_member_login') ) ): ?><li class="member_login"><a href="<?php echo $member_login; ?>" target="_new"><span class="icon"> | </span><?php echo _e('Login', 'fitnessthemes' ); ?></a></li><?php endif; ?>

	 </ul>
	</div>
<?php
}
add_action( 'fwf_social_icons', 'pdw_spine_social_icons' );


function pdw_show_business_meta() { 
	if( !get_theme_mod('theme_hide_h_phone') || !get_theme_mod('theme_hide_h_address') ): ?>
	<div class="fwf_business_meta">
		<?php if( !get_theme_mod('theme_hide_h_phone') ): ?><?php fwf_format_phone( hybrid_get_setting( 'uo_phone_number' ) ); ?><?php endif; ?>
		<?php if( !get_theme_mod('theme_hide_h_address') && hybrid_get_setting( 'uo_address' ) ): ?><span class="address"><?php echo hybrid_get_setting( 'uo_address' ); ?></span><?php endif; ?>
	</div>
	<?php endif; ?>
<?php
}
add_action( 'fwf_business_meta', 'pdw_show_business_meta' );

function fwf_format_phone($number) {
	if( $number ) {
		echo '<span class="phone_number"><a href="tel:' . preg_replace( "/[^\d]/","",$number ) . '">'. $number .'</a></span>';
	}
}

function pdw_spine_head() {
}
add_action( 'fwf_head', 'pdw_spine_head' );

/* SuperSlider Slideshow */
function pdw_spine_superslider() {

	$args = array( 'post_type' => 'cp_slide', 'posts_per_page' => 10 );
	$loop = new WP_Query( $args );
	//$cnt = 1;

	//If no slide is found
	if( !$loop->found_posts ) {
		if( is_front_page() ) {
			echo '<div class="no_slideshow">';
			do_action( 'fwf_before_pagestarts' );
			echo '</div>';
		}
		return;
	}
	
	$slide_content_align = get_theme_mod( 'theme_slide_content_align' );

	add_action('wp_footer', 'fwf_wp_footer', 99);
	?>
<div class="slideshow wide-container">
    <div id="slides">
      <ul class="slides-container">
	<?php while ( $loop->have_posts() ) : $loop->the_post(); ?>
        <li>
			<?php //the_post_thumbnail( 'full' ); ?>
			<?php $img_meta = wp_get_attachment_image_src( get_post_thumbnail_id( $loop->ID ), 'full' , false );?>
			<div class="slide-image" style="background-image: url(<?php echo $img_meta[0]; ?>);"></div>
			<div class="slide-container<?php echo ' '. $slide_content_align; ?>">
				<?php the_content(); ?>
			</div>
        </li>
	<?php endwhile; ?>
      <?php /*<nav class="slides-navigation">
        <a href="#" class="next">Next</a>
        <a href="#" class="prev">Previous</a>
      </nav> */ ?>
    </div>

</div>
<?php
}
add_action( 'fwf_slideshow', 'pdw_spine_superslider' );

function the_excerpt_max_charlength($charlength) {
	$excerpt = get_the_excerpt();
	$charlength++;

	if ( mb_strlen( $excerpt ) > $charlength ) {
		$subex = mb_substr( $excerpt, 0, $charlength - 5 );
		$exwords = explode( ' ', $subex );
		$excut = - ( mb_strlen( $exwords[ count( $exwords ) - 1 ] ) );
		if ( $excut < 0 ) {
			$excerpt = mb_substr( $subex, 0, $excut );
		} else {
			$excerpt = $subex;
		}
		return $excerpt. '<a href="'. get_permalink() .'">[...]</a>';
	} else {
		return $excerpt;
	}
}
function new_excerpt_more( $more ) {
	return ' <a class="read-more" href="'. get_permalink( get_the_ID() ) . '">[...]</a>';
}
add_filter( 'excerpt_more', 'new_excerpt_more' );

add_action( 'fwf_before_pagestarts', 'pdw_spine_opening_content');

function pdw_spine_opening_content() {
	global $post;

	if( $opening_content = get_post_meta( $post->ID, 'sport_opening_content', true ) ) {
		echo '<div class="opening_content">' . $opening_content . '</div>';
	}
}

function fwf_has_container() {
	global $post;

	$fullwidth_layouts = array( 'templates/layout-3.php', 'templates/layout-4.php', 'templates/layout-lessons-page.php' );

	$template_slug = get_page_template_slug( $post->ID );

	if( !is_page_template('templates/home-page.php') && ( !in_array( $template_slug, $fullwidth_layouts ) ) && !in_array($post->post_type, array('training-plan', 'pmpro_series' ) ) ) {
		return '<div class="row pagewrap">' . "\n";
	}
}

function fwf_has_header_footer() {
	global $post;

	$no_header_footer = array( 'templates/layout-2.php', 'templates/layout-5.php' );

	$template_slug = get_page_template_slug( $post->ID );

	if( ( !in_array( $template_slug, $no_header_footer ) ) ) {
		return true;
	}
}

function fwf_widget_shortcode($atts) {

    global $wp_widget_factory;

    extract(shortcode_atts(array(
        'name' => FALSE,
        'title' => ''
    ), $atts));

    $name = wp_specialchars($name);

    if (!is_a($wp_widget_factory->widgets[$name], 'WP_Widget')):
        $wp_class = 'WP_Widget_'.ucwords(strtolower($class));

        if (!is_a($wp_widget_factory->widgets[$wp_class], 'WP_Widget')):
            return '<p>'.sprintf(__("%s: Widget class not found. Make sure this widget exists and the class name is correct"),'<strong>'.$class.'</strong>').'</p>';
        else:
            $class = $wp_class;
        endif;
    endif;

    ob_start();
    the_widget($name, $instance, array('widget_id'=>'arbitrary-instance-'.$id,
        'before_widget' => '',
        'after_widget' => '',
        'before_title' => '',
        'after_title' => ''
    ));
    $output = ob_get_contents();
    ob_end_clean();

    if( $title ) {
	$output = str_replace( '<h4></h4>', '<h4>' . $title . '</h4>', $output );
    }

    return $output;

}
add_shortcode('fwf_widget_shortcode','fwf_widget_shortcode');

// retrieves the attachment ID from the file URL
function pdw_spine_get_image_id( $image_url ) {
	global $wpdb;
	$attachment = $wpdb->get_col( $wpdb->prepare( "SELECT ID FROM $wpdb->posts WHERE guid='%s';", $image_url ) );
	return $attachment[0];
}

/*
 * Back up/restore theme option
 */
class pdw_spine_backup_restore_theme_settings {

	function __construct() {
		add_action( 'admin_menu', array(&$this, 'admin_menu') );
	}

	function admin_menu() {
		$page = add_theme_page( 'Backup/Restore', 'Backup/Restore', 'manage_options', 'backup-settings', array(&$this, 'options_page') );

		add_action( "load-{$page}", array(&$this, 'import_export') );
	}

	function import_export() {
		if ( isset( $_GET['action'] ) && ( $_GET['action'] == 'download' ) ) {

			$blog_info = get_blog_details( $GLOBALS['blog_id'] );
			$blog_directory = str_replace( '/', '', $blog_info->path );

			header( "Cache-Control: public, must-revalidate" );
			header( "Pragma: hack" );
			header( "Content-Type: text/plain" );
			header( 'Content-Disposition: attachment; filename="'. $blog_directory. '-theme-settings-'. date("Y-m-d"). '.dat"' );
			echo serialize( $this->_get_settings() );
			die();
		}

		if ( isset($_POST['upload']) && check_admin_referer( 'fwf_restoreSettings', 'fwf_restoreSettings') ) {
			if ( $_FILES["file"]["error"] > 0 ) {
				// error
			} else {
				$settings = unserialize( file_get_contents( $_FILES["file"]["tmp_name"] ) );
				if ( $settings ) {
					foreach ( $settings as $setting ) {
						update_option( $setting->option_name, unserialize($setting->option_value) );
					}
				}
			}
			wp_redirect( admin_url( 'themes.php?page=backup-settings') );
			exit;
		}
	}
	function options_page() { ?>

		<div class="wrap">
			<?php screen_icon(); ?>
			<h2>Backup/Restore Theme Settings</h2>
			<form action="" method="POST" enctype="multipart/form-data">
				<style>#backup-settings td { display: block; margin-bottom: 20px; }</style>
				<table id="backup-settings">
					<tr>
						<td>
							<h3>Backup/Export</h3>
							<p>Here are the stored settings for the current theme:</p>
							<p><textarea class="widefat code" rows="10" cols="100" onclick="this.select()" style="font-size:12px;"><?php echo serialize($this->_get_settings()); ?></textarea></p>
							<p><a href="?page=backup-settings&action=download" class="button-secondary">Download as file</a></p>
						</td>
						<td>
							<h3>Restore/Import</h3>
							<p><label class="description" for="upload">Restore a previous backup</label></p>
							<p><input type="file" name="file" /> <input type="submit" name="upload" id="upload" class="button-primary" value="Upload file" /></p>
							<?php if (function_exists('wp_nonce_field')) wp_nonce_field('fwf_restoreSettings', 'fwf_restoreSettings'); ?>
						</td>
					</tr>
				</table>
			</form>
		</div>

	<?php }
	/*function _display_settings() {
		$settings = unserialize($this->_get_settings());
	}*/
	function _get_settings() {
		global $wpdb;
		return $wpdb->get_results("SELECT option_name, option_value FROM {$wpdb->options} WHERE option_name = 'fwf_theme_settings'");
	}
}

new pdw_spine_backup_restore_theme_settings();

add_filter( 'the_content', 'sc_replacecolon', 5 );
function sc_replacecolon( $content ){ return str_replace( '[sc:', '[sc name=', $content ); }

add_filter( 'body_class','fwf_body_classes' );
function fwf_body_classes( $classes ) {
	global $current_user;

	if( $post->post_type == 'pmpro_series' ) {
		$classes[] = 'page-template-layout-3';
	}

	if( is_user_logged_in() && isset($current_user->roles) && in_array( 'subscriber', $current_user->roles ) ) {
		$classes[] = 'role-subscriber';

			if( function_exists( 'pmpro_getMembershipLevelsForUser' ) ) {
				if( pmpro_getMembershipLevelsForUser( $current_user->ID ) ) {

					//Also remove wp bar for end users
					add_filter('show_admin_bar', '__return_false');
				}
			}
	}

	return $classes;
}

add_shortcode('global_proceed_to_profile','fwf_to_profile_shortcode');
function fwf_to_profile_shortcode($atts) {

    extract(shortcode_atts(array(
        'html' => ''
    ), $atts));

    return $html . '<h2>You\'re almost finished!</h2>
<a class="button btn uk-button uk-button-primary uk-button-large" href="'. site_url( '/nutrition-profile/', 'https' ) .'"><strong class="uk-text-large">Click Here to Complete your Profile</strong></a>';

}


add_filter('script_loader_tag', 'add_async_attribute', 10, 2);
function add_async_attribute($tag, $handle) {
    if ( 'vide' !== $handle )
        return $tag;
    return str_replace( ' src', ' data-pagespeed-no-defer src', $tag );
}

/////////// Sub-site Exceptions ////////////
add_action( 'template_redirect', 'fwf_process_user' );
function fwf_process_user() {
	global $current_user;

	//Client users on Joey's site
	if( get_current_blog_id() == 24 && in_array('subscriber', $current_user->roles) ) {
		if( !is_network_admin($current_user->ID) && is_front_page() ) {
			wp_redirect(site_url('members-dashboard'));
			exit();
		}
	}
}

function fwf_getHeaderCols() {
	$header_layout = get_theme_mod('theme_layout_header');

	switch ($header_layout) {
		case 'half':
			$cols['left'] = 'six';
			$cols['right'] = 'six';
			return $cols;
			break;

		case 'one-fourth':
			$cols['left'] = 'three';
			$cols['right'] = 'nine';
			return $cols;
			break;

		default:
			$cols['left'] = 'four';
			$cols['right'] = 'eight';
			return $cols;
			break;
	}
}

remove_filter('widget_text_content', 'wpautop');


add_action('fb_after_body', 'fwf_install_gtm_body');
add_action('fb_gtm_header', 'fwf_install_gtm_header');

function fwf_install_gtm_body() {
	if ($misc_gtm_tag = hybrid_get_setting( 'misc_gtm_tag' )): ?>
	<!-- Google Tag Manager (noscript) -->
	<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=<?php echo $misc_gtm_tag; ?>" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
	<!-- End Google Tag Manager (noscript) -->
	<?php
	endif;
}

function fwf_install_gtm_header() {
	if ($misc_gtm_tag = hybrid_get_setting( 'misc_gtm_tag' )): ?>
	<!-- Google Tag Manager -->
	<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
	'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
	})(window,document,'script','dataLayer','<?php echo $misc_gtm_tag; ?>');</script>
	<!-- End Google Tag Manager -->
	<?php
	endif;
}

/* Remove Remove query strings from static resources */
function _remove_query_strings_1( $src ){
	$rqs = explode( '?ver', $src );
        return $rqs[0];
}

function _remove_query_strings_2( $src ){
	$rqs = explode( '&ver', $src );
        return $rqs[0];
}

if ( !is_admin() ) {
	add_filter( 'script_loader_src', '_remove_query_strings_1', 15, 1 );
	add_filter( 'style_loader_src', '_remove_query_strings_1', 15, 1 );
	add_filter( 'script_loader_src', '_remove_query_strings_2', 15, 1 );
	add_filter( 'style_loader_src', '_remove_query_strings_2', 15, 1 );
}

function fwf_login_page_css() {
	$prefix = hybrid_get_prefix(); ?>
    <style type="text/css">
        <?php echo hybrid_get_setting('misc_custom_css'); ?>
        <?php if ( $fwf_auth_screen_color = get_theme_mod( 'color_palette_login_screen_background' )): ?>body.login {background-color: #<?php echo $fwf_auth_screen_color;?>;}<?php endif; ?>
        <?php if( $fwf_logo = get_theme_mod(  $prefix.'_logo' ) ): ?>
        body.login {background-size: cover;}
        body.login h1 a { background-image: url('<?php echo $fwf_logo; ?>') !important; background-size: contain; width: 320px; }
        .wp-submit {float: none; width: 100%; min-height: 35px ; text-transform: uppercase; font-size: 1.1em;}
    	<?php endif;

        // Replace WordPress logo
		/*if( get_theme_mod( $prefix.'_logo' ) ) {
			$logo_img_id = pdw_spine_get_image_id( get_theme_mod( $prefix.'_logo' ) );
			$logo_img = wp_get_attachment_image_src($logo_img_id, 'full' );
			if($logo_img) {
			echo ".login #login h1 a { background-size: 377px; background-image: url(" . str_replace('http://', '//', $logo_img[0]) . "); height: 177px; width: 334px; }";
			}
		}*/
        ?>
    </style>
<?php }
add_action( 'login_enqueue_scripts', 'fwf_login_page_css' );

add_shortcode('fwf_user_first_name','fwf_user_first_name');

function fwf_user_first_name() {
	global $current_user;

	return get_user_meta($current_user->ID, 'first_name', true);
}

// changing the logo link from wordpress.org to our site
function fwf_login_url() {  return home_url(); }
add_filter( 'login_headerurl', 'fwf_login_url' );

// changing the alt text on the logo to show client site name
function fwf_login_title() { return get_option( 'blogname' ); }
add_filter( 'login_headertext', 'fwf_login_title' );

//New! Custom widget area at the end of menu
add_filter('wp_nav_menu_items', 'fwf_menu_extra_content', 99, 2);
function fwf_menu_extra_content($items, $args) {
        if ( class_exists( 'WooCommerce' ) && !get_theme_mod( 'theme_hide_cart_nav_link' ) ) {
        		$items .= '<li id="fwf-cart-menu" class="fwf-cart menu-item"><a href="' . home_url() .'/cart/" rel="nofollow">Cart</a></li>';
        }

        ob_start();
        if (!dynamic_sidebar( 'Menu Content' )):
        endif;
        $menu_content = ob_get_contents();
        ob_end_clean();
        if($menu_content) $items .= '<li class="fwf_menu_extra">'. $menu_content .'</li>';
        return $items;
}

// fixes "Lost Password?" URLs on login page
add_filter("lostpassword_url", function ($url, $redirect) {

    $args = array( 'action' => 'lostpassword' );

    if ( !empty($redirect) )
        $args['redirect_to'] = $redirect;
    return add_query_arg( $args, site_url('wp-login.php') );
}, 10, 2);
// fixes other password reset related urls
add_filter( 'network_site_url', function($url, $path, $scheme) {

    if (stripos($url, "action=lostpassword") !== false)
        return site_url('wp-login.php?action=lostpassword', $scheme);

    if (stripos($url, "action=resetpass") !== false)
        return site_url('wp-login.php?action=resetpass', $scheme);

    return $url;
}, 10, 3 );
// fixes URLs in email that goes out.
add_filter("retrieve_password_message", function ($message, $key) {
    return str_replace(get_site_url(1), get_site_url(), $message);
}, 10, 2);
// fixes email title
add_filter("retrieve_password_title", function($title) {
    return "[" . wp_specialchars_decode(get_option('blogname'), ENT_QUOTES) . "] Password Reset";
});


function jarfit_show_promocode_shortcode($atts) {
    extract(shortcode_atts(array(
        'name' => ''
    ), $atts));

    $output = (isset($_GET['showcode'])) ? '<div class="promocode"><span>Use This promo code at checkout: <b>'. $name .'</b></div>' : '';
	return $output;
}

add_shortcode('jarfit_show_promocode', 'jarfit_show_promocode_shortcode');

function fwf_custom_robots( $output, $public ) {
	$site_id = get_current_blog_id();
	if ( $site_id == 1 ) {
		$output .= "Crawl-delay:  5";
	} else {
		$output .= "Crawl-delay:  5";
	}

	return $output;
}

add_filter( 'robots_txt', 'fwf_custom_robots', 20, 2 );

add_action('admin_head', 'fwf_block_styles');

function fwf_block_styles() {
echo '<style>

.vc_ui-template-list.vc_ui-list-bar {
	display: grid;
	gap: 1rem;
	grid-template-columns: repeat(3,minmax(0,1fr));
}

.vc_ui-template-list .vc_ui-list-bar-item {
	border: none;
}
.vc_templates-template-type-templatera_templates .vc_ui-list-bar-item, .vc_ui-template-list .vc_ui-list-bar-item {
	border: 1px solid rgba(0,0,0,.1) !important;
	border-radius: 5px;
}
.vc_ui-template-list, .vc_ui-template-list, .vc_ui-template-list {
	padding: 1rem !important;
}

.vc_ui-template-list .vc_ui-control-button:last-of-types {
	display: none;
}

[data-template_unique_id="8764"] .vc_ui-list-bar-item-trigger::before, .vc_ui-list-bar-item-trigger::before {
    content: "";
    width: 260px;
    height: 160px;
    background: #efefef;
    display: block;
    margin-bottom: 12px;
    border-radius: 4px;
	background-size: contain !important;
    background-repeat: no-repeat;
}
[data-template_unique_id="8764"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2021/12/Screen-Shot-2021-12-03-at-9.49.07-AM.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8779"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2021/12/Screen-Shot-2021-12-03-at-9.44.21-AM.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8743"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2021/12/Screen-Shot-2021-12-03-at-9.46.20-AM.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8739"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2021/12/Screen-Shot-2021-12-03-at-9.48.57-AM.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8716"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2021/12/Screen-Shot-2021-12-03-at-9.48.44-AM.png");
	background-size: cover;
	background-position: center;
}

[data-template_unique_id="8793"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/cta.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8887"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/guarantee.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8855"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/private-personal-training.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8715"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/hero.png");
	background-size: cover;
	background-position: center;
}

[data-template_unique_id="8982"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/gym.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="8997"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/online-coach-s.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="9068"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/personal-training.png");
	background-size: cover;
	background-position: center;
}

[data-template_unique_id="9101"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/instruct.png");
	background-size: cover;
	background-position: center;
}

[data-template_unique_id="8944"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/studio-home.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="9072"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/sucess.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="9000"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/stick.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="9130"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/studio-about.png");
	background-size: cover;
	background-position: center;
}
[data-template_unique_id="9110"] .vc_ui-list-bar-item-trigger::before {
	background-image: url("//lab.fitnesswebsiteformula.com/wp-content/uploads/2022/01/ppt.png");
	background-size: cover;
	background-position: center;
}


</style>';
}




/* Blog Options
---------------------- */
if( function_exists('acf_add_options_page') ) {

	acf_add_options_page(array(
		'page_title' 	=> 'Theme Settings',
		'menu_title'	=> 'Theme Settings',
		'menu_slug' 	=> 'theme-general-settings',
		'capability'	=> 'edit_posts',
		'redirect'		=> false
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Theme Blog Settings',
		'menu_title'	=> 'Blog Settings',
		'parent_slug'	=> 'theme-general-settings',
	));

}


/* Custom WP Bakery Blog
------------------------------- */
if ( defined( 'WPB_VC_VERSION' ) ) {
	require_once( get_template_directory().'/template-parts/vc-blog.php' );
}

/* Mobile Detection
------------------------------- */
function isUserAgentMobile() {

	$useragent = $_SERVER['HTTP_USER_AGENT'];
	if( preg_match('/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i',$useragent)||preg_match('/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i',substr($useragent,0,4)) ) {
		return true;
	} else {
		return false;
	}
}